{"version":3,"file":"static/js/477.11fea706.chunk.js","mappings":"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","sources":["api.js","components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.jsx","components/BackLink/BackLink.jsx","pages/MovieDetailsPage.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '866c584b953aab9d6c2151363c4952f3';\n\nconst fetchTrendingMovies = async () => {\n  const response = await axios.get('/trending/movie/day', {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n};\n\nexport const getTrendingMovies = {\n  fetchTrendingMovies,\n};\n\nconst fetchMovieById = async id => {\n  const response = await axios.get(`movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const getMovieById = {\n  fetchMovieById,\n};\n\nconst fetchMovieByPathname = async pathname => {\n  const response = await axios.get(pathname, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const getMovieByPathname = {\n  fetchMovieByPathname,\n};\n\nconst fetchMovieByQuery = async query => {\n  const response = await axios.get(`search/movie?query=${query}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n};\n\nexport const getMovieByQuery = {\n  fetchMovieByQuery,\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledMovieDetails = styled.section`\n  display: flex;\n  flex-direction: column;\n  margin-top: 20px;\n`;\n\nexport const MovieDetailsInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 30px;\n  margin-bottom: 40px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n  }\n`;\n\nexport const MovieDetailsImage = styled.img`\n  border-radius: 5px;\n  width: 100%;\n`;\n\nexport const MovieDetailsDescription = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n`;\n\nexport const MovieDetailsMenu = styled.ul`\n  display: flex;\n  gap: 20px;\n  margin-top: 10px;\n  margin-bottom: 20px;\n`;\n\nexport const MovieDetailsLink = styled(NavLink)`\n  text-decoration: none;\n  font-size: 16px;\n  font-weight: 500;\n  color: #000000;\n  padding: 10px 20px;\n  border: 1px solid #000000;\n  border-radius: 5px;\n\n  &.active {\n    text-decoration: none;\n    color: #ffa500;\n    position: relative;\n  }\n`;\n","import React from 'react';\nimport Placeholder from 'images/placeholder.jpg';\nimport PropTypes from 'prop-types';\nimport {\n  StyledMovieDetails,\n  MovieDetailsInfo,\n  MovieDetailsImage,\n  MovieDetailsDescription,\n  MovieDetailsMenu,\n  MovieDetailsLink,\n} from './MovieDetails.styled';\n\nconst MovieDetails = ({ data, location }) => {\n  const { poster_path, title, original_title, vote_average, overview, genres } =\n    data;\n  const userScore = `User Score: ${(vote_average * 10).toFixed(0)}%`;\n  const poster = poster_path\n    ? `https://image.tmdb.org/t/p/w500${poster_path}`\n    : Placeholder;\n  const genresList = genres?.map(genre => genre.name).join(' ');\n\n  return (\n    <StyledMovieDetails>\n      <MovieDetailsInfo>\n        <MovieDetailsImage src={poster} alt={original_title} />\n        <MovieDetailsDescription>\n          <div>\n            <h2>{title}</h2>\n            <p>{userScore}</p>\n          </div>\n          <div>\n            <h3>Overview</h3>\n            <p>{overview}</p>\n          </div>\n          <div>\n            <h3>Genres</h3>\n            <p>{genresList}</p>\n          </div>\n        </MovieDetailsDescription>\n      </MovieDetailsInfo>\n      <div>\n        <h3>Additional Information</h3>\n        <MovieDetailsMenu>\n          <li>\n            <MovieDetailsLink to=\"cast\" state={{ from: location }}>\n              Cast\n            </MovieDetailsLink>\n          </li>\n          <li>\n            <MovieDetailsLink to=\"reviews\" state={{ from: location }}>\n              Reviews\n            </MovieDetailsLink>\n          </li>\n        </MovieDetailsMenu>\n      </div>\n    </StyledMovieDetails>\n  );\n};\n\nMovieDetails.propTypes = {\n  poster_path: PropTypes.string,\n  title: PropTypes.string,\n  original_title: PropTypes.string,\n  vote_average: PropTypes.number,\n  overview: PropTypes.string,\n  genres: PropTypes.array,\n};\n\nexport default MovieDetails;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { AiOutlineArrowLeft } from 'react-icons/ai';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: #000000;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: #ffa500;\n  }\n`;\n\nconst BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <AiOutlineArrowLeft size=\"14\" />\n      {children}\n    </StyledLink>\n  );\n};\n\nBackLink.propTypes = {\n  to: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  children: PropTypes.node.isRequired,\n};\n\nexport default BackLink;\n","import React, { useEffect, useState } from 'react';\nimport { useParams, useLocation, Outlet } from 'react-router-dom';\nimport { getMovieById } from 'api';\nimport MovieDetails from 'components/MovieDetails/MovieDetails';\nimport Loader from 'components/Loader/Loader';\nimport BackLink from 'components/BackLink/BackLink';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n  let backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    setIsLoading(true);\n    const getMovie = async () => {\n      try {\n        const fetchedMovie = await getMovieById.fetchMovieById(movieId);\n        setMovie(fetchedMovie);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getMovie(movieId);\n  }, [movieId]);\n\n  return (\n    <main>\n      <BackLink to={backLinkHref}>Go back</BackLink>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <MovieDetails data={movie} location={backLinkHref} />\n      )}\n      <Outlet />\n      {error && <p>Something went wrong. Try again later</p>}\n    </main>\n  );\n};\n\nexport default MovieDetailsPage;\n"],"names":["axios","API_KEY","fetchTrendingMovies","params","api_key","response","data","results","getTrendingMovies","fetchMovieById","id","getMovieById","fetchMovieByPathname","pathname","getMovieByPathname","fetchMovieByQuery","query","getMovieByQuery","StyledMovieDetails","styled","MovieDetailsInfo","MovieDetailsImage","MovieDetailsDescription","MovieDetailsMenu","MovieDetailsLink","NavLink","location","poster_path","title","original_title","vote_average","overview","genres","userScore","toFixed","poster","Placeholder","genresList","map","genre","name","join","src","alt","to","state","from","StyledLink","Link","children","size","movieId","useParams","useState","movie","setMovie","isLoading","setIsLoading","error","setError","backLinkHref","useLocation","useEffect","getMovie","fetchedMovie","Loader"],"sourceRoot":""}
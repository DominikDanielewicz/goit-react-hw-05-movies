{"version":3,"file":"static/js/80.865f31be.chunk.js","mappings":"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","sources":["api.js","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/Search/Search.styled.js","components/Search/Search.jsx","pages/MoviesPage.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '866c584b953aab9d6c2151363c4952f3';\n\nconst fetchTrendingMovies = async () => {\n  const response = await axios.get('/trending/movie/day', {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n};\n\nexport const getTrendingMovies = {\n  fetchTrendingMovies,\n};\n\nconst fetchMovieById = async id => {\n  const response = await axios.get(`movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const getMovieById = {\n  fetchMovieById,\n};\n\nconst fetchMovieByPathname = async pathname => {\n  const response = await axios.get(pathname, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const getMovieByPathname = {\n  fetchMovieByPathname,\n};\n\nconst fetchMovieByQuery = async query => {\n  const response = await axios.get(`search/movie?query=${query}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n};\n\nexport const getMovieByQuery = {\n  fetchMovieByQuery,\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding-top: 60px;\n  padding-bottom: 50px;\n`;\n\nexport const StyledMoviesList = styled.ul`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  gap: 30px;\n  width: 100%;\n`;\n\nexport const MoviesListCard = styled.li`\n  cursor: pointer;\n  flex-basis: calc((100% - 30px) / 2);\n  max-width: calc((100% - 30px) / 2);\n\n  @media screen and (min-width: 768px) {\n    flex-basis: calc((100% - 60px) / 3);\n    max-width: calc((100% - 60px) / 3);\n  }\n\n  @media screen and (min-width: 1200px) {\n    flex-basis: calc((100% - 90px) / 4);\n    max-width: calc((100% - 90px) / 4);\n  }\n`;\n\nexport const MoviesListImage = styled.img`\n  border-radius: 5px;\n  width: 100%;\n`;\n\nexport const MoviesListTitle = styled.h2`\n  word-wrap: break-word;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.4;\n  color: #ffa500;\n  margin-top: 10px;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Placeholder from 'images/placeholder.jpg';\nimport {\n  Container,\n  StyledMoviesList,\n  MoviesListCard,\n  MoviesListImage,\n  MoviesListTitle,\n} from './MoviesList.styled';\n\nconst MoviesList = ({ data }) => {\n  const location = useLocation();\n  const pathname = location.pathname;\n\n  const shortenedTitle = movietitle => {\n    let title = movietitle;\n    if (title.length > 30) {\n      const lastSpaceIndex = title.lastIndexOf(' ', 32);\n      title = title.slice(0, lastSpaceIndex) + '...';\n    }\n    return title;\n  };\n\n  return (\n    <Container>\n      <StyledMoviesList>\n        {data.map(movie => (\n          <MoviesListCard key={movie.id}>\n            <Link\n              to={pathname === '/' ? `movies/${movie.id}` : `${movie.id}`}\n              state={{ from: location }}\n            >\n              <MoviesListImage\n                src={\n                  movie.poster_path\n                    ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n                    : Placeholder\n                }\n                alt={movie.original_title}\n              />\n              <MoviesListTitle>{shortenedTitle(movie.title)}</MoviesListTitle>\n            </Link>\n          </MoviesListCard>\n        ))}\n      </StyledMoviesList>\n    </Container>\n  );\n};\n\nMoviesList.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      key: PropTypes.number,\n      id: PropTypes.number,\n      title: PropTypes.string,\n    })\n  ),\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const StyledSearch = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  margin-top: 20px;\n  gap: 20px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n  }\n`;\n\nexport const SearchInput = styled.input`\n  width: 100%;\n  border: 1px solid #000000;\n  border-radius: 4px;\n  color: #000000;\n  font-size: 18px;\n  letter-spacing: 0.03em;\n  line-height: 1.25;\n  padding: 12px;\n\n  &::placeholder {\n    color: #000000;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 80%;\n  }\n`;\n\nexport const SearchButton = styled.button`\n  background-color: #ffa500;\n  width: 100%;\n  font-size: 18px;\n  padding: 12px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #ff8a00;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 20%;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StyledSearch, SearchInput, SearchButton } from './Search.styled';\n\nconst Search = ({ onSubmit }) => {\n  return (\n    <StyledSearch onSubmit={onSubmit}>\n      <SearchInput\n        type=\"text\"\n        name=\"query\"\n        placeholder=\"Enter the name of the movie here...\"\n      />\n      <SearchButton type=\"submit\">Search</SearchButton>\n    </StyledSearch>\n  );\n};\n\nSearch.propTypes = {\n  onSubmit: PropTypes.func,\n};\n\nexport default Search;\n","import React, { useEffect, useState } from 'react';\nimport { Outlet, useSearchParams } from 'react-router-dom';\nimport { getMovieByQuery } from 'api';\nimport MoviesList from './../components/MoviesList/MoviesList';\nimport Loader from 'components/Loader/Loader';\nimport Search from 'components/Search/Search';\n\nconst MoviesPage = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  const [searchedMovies, setSearchedMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const getSearchedMovies = async () => {\n      try {\n        const fetchedSearchedMovies = await getMovieByQuery.fetchMovieByQuery(\n          query\n        );\n        setSearchedMovies([...fetchedSearchedMovies]);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getSearchedMovies(query);\n  }, [query]);\n\n  const searchMoviesQuerySubmitHandler = event => {\n    event.preventDefault();\n    const form = event.target;\n    setSearchParams({ query: form.elements.query.value.trim() });\n    form.reset();\n  };\n\n  return (\n    <main>\n      <h2>Search your movies</h2>\n      {isLoading && <Loader />}\n      <Search onSubmit={searchMoviesQuerySubmitHandler} />\n      {query === '' && (\n        <p>There is something with your query. Please provide correct one</p>\n      )}\n      {searchedMovies.length === 0 && (\n        <p>{`We can't find a video for this query: ${query}`}</p>\n      )}\n      {query && !isLoading && <MoviesList data={searchedMovies} />}\n      <Outlet />\n      {error && <p>Something went wrong. Try again later</p>}\n    </main>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["axios","API_KEY","fetchTrendingMovies","params","api_key","response","data","results","getTrendingMovies","fetchMovieById","id","getMovieById","fetchMovieByPathname","pathname","getMovieByPathname","fetchMovieByQuery","query","getMovieByQuery","Container","styled","StyledMoviesList","MoviesListCard","MoviesListImage","MoviesListTitle","location","useLocation","shortenedTitle","movietitle","title","length","lastSpaceIndex","lastIndexOf","slice","map","movie","to","state","from","src","poster_path","Placeholder","alt","original_title","StyledSearch","SearchInput","SearchButton","onSubmit","type","name","placeholder","useSearchParams","searchParams","setSearchParams","get","useState","searchedMovies","setSearchedMovies","isLoading","setIsLoading","error","setError","useEffect","getSearchedMovies","fetchedSearchedMovies","Loader","event","preventDefault","form","target","elements","value","trim","reset","MoviesList"],"sourceRoot":""}